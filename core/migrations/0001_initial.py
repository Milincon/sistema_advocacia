# Generated by Django 5.2.3 on 2025-06-25 12:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('oab_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nº da OAB')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Cliente')),
                ('document_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF/CNPJ')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Advogado Responsável')),
            ],
        ),
        migrations.CreateModel(
            name='LawCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título do Caso')),
                ('case_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número do Processo')),
                ('status', models.CharField(choices=[('ACTIVE', 'Ativo'), ('ARCHIVED', 'Arquivado'), ('SUSPENDED', 'Suspenso')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='law_cases', to='core.client', verbose_name='Cliente')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Advogado Responsável')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor R$')),
                ('transaction_type', models.CharField(choices=[('INCOME', 'Receita (Honorários)'), ('EXPENSE', 'Despesa (Custas)')], max_length=7, verbose_name='Tipo')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento/Pagamento')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('PAID', 'Pago'), ('OVERDUE', 'Atrasado')], default='PENDING', max_length=10, verbose_name='Status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Advogado')),
                ('law_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.lawcase', verbose_name='Processo')),
            ],
        ),
        migrations.CreateModel(
            name='CaseUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Descrição do Andamento/Prazo')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Data Fatal do Prazo')),
                ('is_deadline', models.BooleanField(default=False, verbose_name='É um prazo fatal?')),
                ('completed', models.BooleanField(default=False, verbose_name='Concluído')),
                ('law_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='core.lawcase', verbose_name='Processo')),
            ],
            options={
                'ordering': ['-due_date'],
            },
        ),
    ]
